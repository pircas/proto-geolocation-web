{"version":3,"sources":["App.js","index.js"],"names":["App","useState","pircas","setPircas","onLocationReady","location","timestamp","latitude","coords","longitude","altitude","accuracy","altitudeAccuracy","onLocationError","error","console","log","Navbar","bg","variant","Container","Brand","Button","onClick","navigator","geolocation","getCurrentPosition","enableHighAccuracy","maximumAge","Table","map","pirca","Date","toISOString","filter","element","removePirca","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QA4EeA,MAvEf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,KAGPC,EAAkB,SAACC,GACvBF,EAAU,GAAD,mBACJD,GADI,CAEP,CACEI,UAAWD,EAASC,UACpBC,SAAUF,EAASG,OAAOD,SAC1BE,UAAWJ,EAASG,OAAOC,UAC3BC,SAAUL,EAASG,OAAOE,SAC1BC,SAAUN,EAASG,OAAOG,SAC1BC,iBAAkBP,EAASG,OAAOI,sBAKlCC,EAAkB,SAACC,GACvBC,QAAQC,IAAI,iBAAkBF,IAchC,OACE,gCACE,cAACG,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,oBACA,cAACC,EAAA,EAAD,CAAQC,QAhBI,WAClBC,UAAUC,YAAYC,mBAAmBtB,EAAiBS,EAAiB,CACzEc,oBAAoB,EACpBC,WAAY,KAaR,8BAKJ,cAACR,EAAA,EAAD,UACE,eAACS,EAAA,EAAD,WACE,gCACE,+BACE,8CACA,yCACA,0CACA,2CACA,4BAGJ,gCACI3B,EAAO4B,KAAI,SAAAC,GAAK,OAChB,+BACE,6BAAM,IAAIC,KAAKD,EAAMzB,WAAY2B,gBACjC,6BAAKF,EAAMxB,WACX,6BAAKwB,EAAMtB,YACX,6BAAKsB,EAAMpB,WACX,6BAAI,cAACW,EAAA,EAAD,CAAQH,QAAQ,SAASI,QAAS,kBAhChC,SAACQ,GACnB5B,EAAUD,EAAOgC,QAAO,SAAAC,GAAO,OAAIA,IAAYJ,MA+BSK,CAAYL,IAApD,mBALGA,EAAMzB,yBCvD7B+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a41e4597.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { useState } from 'react';\nimport { Container, Button, Navbar, Table } from 'react-bootstrap';\n\nfunction App() {\n  const [pircas, setPircas] = useState([]);\n\n  const onLocationReady = (location) => {\n    setPircas([\n      ...pircas,\n      {\n        timestamp: location.timestamp,\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude,\n        altitude: location.coords.altitude,\n        accuracy: location.coords.accuracy,\n        altitudeAccuracy: location.coords.altitudeAccuracy,\n      },\n    ]);\n  };\n\n  const onLocationError = (error) => {\n    console.log(\"Location error\", error);\n  };\n\n  const createPirca = () => {\n    navigator.geolocation.getCurrentPosition(onLocationReady, onLocationError, {\n      enableHighAccuracy: true,\n      maximumAge: 0,\n    });\n  };\n\n  const removePirca = (pirca) => {\n    setPircas(pircas.filter(element => element !== pirca));\n  };\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand>Pirca</Navbar.Brand>\n          <Button onClick={createPirca}>\n            Nueva pirca\n          </Button>\n        </Container>\n      </Navbar>\n      <Container>\n        <Table>\n          <thead>\n            <tr>\n              <th>Fecha y hora</th>\n              <th>Latitud</th>\n              <th>Longitud</th>\n              <th>Precision</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            { pircas.map(pirca => (\n              <tr key={pirca.timestamp}>\n                <td>{(new Date(pirca.timestamp)).toISOString()}</td>\n                <td>{pirca.latitude}</td>\n                <td>{pirca.longitude}</td>\n                <td>{pirca.accuracy}</td>\n                <td><Button variant=\"danger\" onClick={() => removePirca(pirca)}>X</Button></td>\n              </tr>\n            )) }\n          </tbody>\n        </Table>\n      </Container>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}